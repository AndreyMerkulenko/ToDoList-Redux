{"version":3,"sources":["store/taskReducer.js","components/ToDo.js","components/ToDoForm.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["defaultState","task","ADD_TASK","REMOVE_TASK","EDIT_TASK","TOGGLE_TASK","ToDo","dispatch","useDispatch","className","complete","onClick","id","type","payload","DeleteOutlined","editTask","EditOutlined","ToDoForm","useState","userInput","setUserInput","handleSubmit","e","preventDefault","newTask","Math","random","toString","substr","addTask","onSubmit","value","onChange","currentTarget","onKeyDown","key","placeholder","App","useSelector","state","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","filter","result","prompt","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57b070fd.chunk.js","sourcesContent":["\r\n\r\n\r\nconst defaultState = {\r\n    task:[]\r\n}\r\n\r\nconst ADD_TASK='ADD_TASK' \r\nconst REMOVE_TASK='REMOVE_TASK' \r\nconst EDIT_TASK='EDIT_TASK' \r\nconst TOGGLE_TASK='TOGGLE_TASK' \r\n\r\nexport const taskReducer = (state=defaultState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_TASK:\r\n            return {...state, task:[...state.task, action.payload]}\r\n\r\n        case REMOVE_TASK:\r\n            return {...state, task:state.task.filter(task=>task.id !== action.payload)}\r\n\r\n        case TOGGLE_TASK:\r\n            return {...state, task:state.task.map(task=>task.id !== action.payload ? { ...task } :  { ...task, complete: !task.complete } )}\r\n\r\n        case EDIT_TASK:\r\n            let result = prompt('Редактировать задачу', action.payload);\r\n            if(result){\r\n                return {...state, task:state.task.map(task=>task.task == action.payload ? { ...task, task: result } : { ...task } )}\r\n            } else return  {...state, task:[...state.task]}\r\n\r\n        default:\r\n           return state;\r\n    }\r\n}\r\n\r\nexport const addTaskAction = (payload) => ({type:'ADD_TASK', payload:payload})\r\nexport const removeTaskAction = (payload) => ({type:'REMOVE_TASK', payload:payload})\r\nexport const editTaskAction = (payload) => ({type:'EDIT_TASK', payload:payload})\r\nexport const toggleTaskAction = (payload) => ({type:'TOGGLE_TASK', payload:payload})","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { editTaskAction, removeTaskAction, toggleTaskAction } from '../store/taskReducer';\r\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nfunction ToDo({task}) {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const toggleTask = (id) => {\r\n        dispatch(toggleTaskAction(id))\r\n    }\r\n\r\n    const removeTask = (id) => {\r\n        dispatch(removeTaskAction(id))\r\n    }\r\n    const editTask = (task) => {\r\n        dispatch(editTaskAction(task))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div key={task.id} className=\"item-todo\">\r\n                <div\r\n                    className={task.complete ? 'item-text strike' : 'item-text'}\r\n                    onClick={() => toggleTask(task.id)}>\r\n                    {task.task}\r\n                </div>\r\n                    <div className=\"item-delete\" onClick={() => removeTask(task.id)}>\r\n                    <DeleteOutlined />\r\n                    </div>\r\n                        <div className=\"item-edit\" onClick={() => editTask(task.task)}>\r\n                        <EditOutlined />\r\n                        </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDo\r\n","import { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTaskAction } from '../store/taskReducer';\r\n\r\nfunction ToDoForm() {\r\n    const dispatch = useDispatch();\r\n    const [userInput, setUserInput] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setUserInput(e.currentTarget.value);\r\n      };\r\n    \r\n      const addTask = (task) => {\r\n          const newTask={\r\n              id: Math.random().toString(36).substr(2, 9),\r\n              task: task,\r\n            complete: false,\r\n          }\r\n          dispatch(addTaskAction(newTask))\r\n      }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addTask(userInput) \r\n        setUserInput('');\r\n      }; \r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n          handleSubmit(e);\r\n        }\r\n      };\r\n\r\n\r\n    return (\r\n<form onSubmit={handleSubmit}>\r\n      <input\r\n        value={userInput}\r\n        type=\"text\"\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyPress}\r\n        placeholder=\"Введите значение...\"\r\n      />\r\n      <button>Сохранить</button>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default ToDoForm\r\n","import { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport ToDo from \"./components/ToDo\";\nimport ToDoForm from \"./components/ToDoForm\";\n\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const task = useSelector(state=> state.task.task)\n\n\n  return (\n    <div className=\"App\">\n    <header>\n        <h1>Список задач: {task.length}</h1>\n      </header>\n      <ToDoForm/>\n        {task.map(task=>{\n          return(\n            <ToDo task={task} key={task.id}/>\n          )\n        })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from \"redux\";\r\nimport { taskReducer } from \"./taskReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    task: taskReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}